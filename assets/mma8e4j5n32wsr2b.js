import{R as c,ch as l}from"./g670b8vtkhx0yc6d.js";import{f as g,u as y,a as m,b as _,ag as f}from"./gg0tb34p9fzo1omt.js";const d=20,D=({workspaceId:e,currPage:t,groupFilter:a})=>{const{data:u,isLoading:i,isPlaceholderData:r}=g({queryKey:a===""?[e,"groups",`page-${t}`]:[e,"groups","filtered",a,`page-${t}`],queryFn:()=>c.safeGet("/accounts/{account_id}/groups",{parameters:{path:{account_id:e},query:{query:a,offset:t*d,orderby:"created_time desc",limit:d}}}),placeholderData:f});return{groups:u,isLoading:i,isPlaceholderData:r}},M=({workspaceId:e,currentGroups:t})=>{const a=y(),u=l(),i=_(),{mutateAsync:r}=m({mutationFn:({workspaceId:s,name:n})=>c.safePost("/accounts/{account_id}/group",{parameters:{path:{account_id:s}},requestBody:{name:n}}),onMutate:({workspaceId:s,name:n})=>{a.cancelQueries({queryKey:[s,"groups"]});const o=t;return a.setQueryData([s,"groups","page-0"],p=>(p||(p={limit:10,offset:0,items:[],total:0}),{...p,items:[{id:"new",name:n,num_members:0,created_time:""},...p.items.slice(0,9)]})),{previousGroups:o}},onError:(s,n,o)=>{a.setQueryData([e,"groups","page-0"],o?.previousGroups),a.invalidateQueries({queryKey:[e,"groups"]}),s.message==="Group with this name already exists."&&u.warning(i.formatMessage({id:"workspaceSettings.groups.duplicateName",defaultMessage:"Group with this name already exists"}),{duration:2})},onSettled:async()=>{await new Promise(s=>setTimeout(s,1e3)),a.invalidateQueries({queryKey:[e,"groups"]})}});return{createGroup:r}},Q=({workspaceId:e})=>{const t=y(),{mutateAsync:a}=m({mutationFn:async u=>await c.safeDelete("/accounts/{account_id}/group/{group_id}",{parameters:{path:{account_id:e,group_id:u}}}),onMutate:()=>{t.invalidateQueries({queryKey:[e,"groups","page-0"]})},onSettled:()=>{t.invalidateQueries({queryKey:[e,"groups","page-0"]})}});return{deleteGroup:a}},v=({workspaceId:e})=>{const t=y(),a=l(),u=_(),{mutateAsync:i}=m({mutationFn:async({workspaceId:r,groupID:s,name:n})=>await c.safePatch("/accounts/{account_id}/group/{group_id}",{parameters:{path:{account_id:r,group_id:s}},requestBody:{name:n}}),onMutate:({workspaceId:r,groupID:s,name:n})=>{t.setQueryData([r,"groups",s],o=>({...o,name:n}))},onError:r=>{r.message==="Group with this name already exists."&&a.warning(u.formatMessage({id:"workspaceSettings.groups.duplicateName",defaultMessage:"Group with this name already exists"}),{duration:2})},onSettled:async()=>{await new Promise(r=>setTimeout(r,1e3)),t.invalidateQueries({queryKey:[e,"groups"]})}});return{updateGroupName:i}},K=({workspaceId:e,groupId:t})=>g({queryKey:[e,"groups",t],enabled:!!t,queryFn:async()=>await c.safeGet("/accounts/{account_id}/group/{group_id}",{parameters:{path:{account_id:e,group_id:t}}})}),q=10,b=({workspaceId:e,groupId:t,search:a,currPage:u})=>g({queryKey:[e,"groups",t,a,`members-page-${u}`],queryFn:()=>c.safeGet("/accounts/{account_id}/group/{group_id}/users",{parameters:{path:{account_id:e,group_id:t},query:{query:a,offset:u*q}}}),placeholderData:f}),w=({workspaceId:e,groupId:t,members:a,search:u,currPage:i})=>{const r=y();return m({mutationFn:async s=>await c.safeDelete("/accounts/{account_id}/group/{group_id}/users/{user_id}",{parameters:{path:{account_id:e,group_id:t,user_id:s}}}),onMutate:s=>{r.cancelQueries({queryKey:[e,"groups",t]});const n=a;return r.setQueryData([e,"groups",t,u,`members-page-${i}`],o=>o?{...o,items:o.items.filter(p=>p.id!==s),total:o.total-1}:{limit:10,offset:0,items:[],total:0}),{previousData:n}},onError:(s,n,o)=>{r.setQueryData([e,"groups",t,`members-page-${i}`],o?.previousData),r.invalidateQueries({queryKey:[e,"groups",t]})},onSettled:async()=>{await new Promise(s=>setTimeout(s,1e3)),r.invalidateQueries({queryKey:[e,"groups"]})}})};export{d as M,w as a,K as b,Q as c,v as d,D as e,M as f,b as u};
//# sourceMappingURL=mma8e4j5n32wsr2b.js.map
