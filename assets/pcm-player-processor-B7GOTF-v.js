class o extends AudioWorkletProcessor{channelCount;sampleRate;paused;buffer;capacityFrames;totalFrames;playheadFrame;lastPositionPostTime;constructor(){super(),this.channelCount=1,this.sampleRate=24e3,this.paused=!0,this.capacityFrames=this.sampleRate*60,this.totalFrames=0,this.playheadFrame=0,this.buffer=new Float32Array(this.capacityFrames*this.channelCount),this.lastPositionPostTime=currentTime,this.port.onmessage=t=>{switch(t.data.type){case"init":{t.data.payload&&"channels"in t.data.payload&&(this.channelCount=t.data.payload.channels);break}case"play":{this.paused=!1;break}case"pause":{this.paused=!0;break}case"seek":{if(t.data.payload&&"seconds"in t.data.payload){const a=t.data.payload.seconds,s=Math.round(a*this.sampleRate);this.playheadFrame=Math.max(0,Math.min(this.playheadFrame+s,this.totalFrames))}break}case"reset":{this.playheadFrame=0,this.paused=!0;break}case"push":{const a=t.data.payload?.chunk;if(!a)break;const s=a instanceof Uint8Array?a:new Uint8Array(a),e=new Int16Array(s.buffer,s.byteOffset,s.byteLength/2);this.#a(this.#t(e));break}}}}#t(t){const a=new Float32Array(t.length);for(let s=0;s<t.length;s++)a[s]=Math.max(-1,Math.min(1,t[s]/32768));return a}#a(t){const a=t.length/this.channelCount;if(this.totalFrames+a>this.capacityFrames){let e=this.capacityFrames;for(;this.totalFrames+a>e;)e*=2;const h=new Float32Array(e*this.channelCount);h.set(this.buffer.subarray(0,this.totalFrames*this.channelCount)),this.buffer=h,this.capacityFrames=e}const s=this.totalFrames*this.channelCount;this.buffer.set(t,s),this.totalFrames+=a}process(t,a,s){const e=a[0],h=e[0].length;if(this.paused)for(let i=0;i<e.length;i++)e[i].fill(0);else for(let i=0;i<h;i++)if(this.playheadFrame<this.totalFrames){const r=this.playheadFrame*this.channelCount;for(let n=0;n<e.length;n++)e[n][i]=this.buffer[r+n]||0;this.playheadFrame++}else for(let r=0;r<e.length;r++)e[r][i]=0;return currentTime-this.lastPositionPostTime>=.05&&(this.#e(this.playheadFrame/this.sampleRate,this.totalFrames/this.sampleRate),this.lastPositionPostTime=currentTime),!0}#e(t,a){this.port.postMessage({type:"timeupdate",payload:{seconds:t,totalSeconds:a}})}}registerProcessor("pcm-player",o);
//# sourceMappingURL=pcm-player-processor-B7GOTF-v.js.map
