import{kw as g,D as e,m7 as D}from"./g670b8vtkhx0yc6d.js";import{N as x,j as p,r as E,p as h}from"./gg0tb34p9fzo1omt.js";import{aj as f}from"./forbprkns1cohsbl.js";const l=async a=>{await h.signOut({callbackUrl:a}),D()},i=(a,o)=>{l(a).then(()=>e.addTiming("chatgpt.web.logout.shouldClearIndexedDB")).catch(t=>{e.addError(new Error("Failed to logout",{cause:t}))})};function B({federatedLogoutUri:a}){const{isFannyPackInitializerEnabled:o}=f();return E.useEffect(()=>{const t=a??window.location.origin;window&&window.indexedDB&&o&&typeof window.indexedDB.databases=="function"?(e.addAction("chatgpt.web.logout.clearIndexedDB"),(async()=>{const u=(await window.indexedDB.databases()).map(n=>new Promise((r,w)=>{if(n.name){const d=window.indexedDB.deleteDatabase(n.name);d.onsuccess=()=>r(),d.onerror=m=>{e.addError(new Error(`Delete IndexedDB failed for database ${n.name}, ${m}`)),w()},d.onblocked=()=>{e.addError(new Error(`Delete IndexedDB blocked for database ${n.name}`)),r()}}else e.addError(new Error(`Invalid database name ${n.name}`)),r()}));await Promise.all(u)})().then(()=>{e.addTiming("chatgpt.web.logout.clearedIndexedDB"),i(t)}).catch(c=>{e.addError(new Error("Failed to clear IndexedDB",{cause:c})),i(t)})):l(a??window.location.origin).catch(s=>e.addError(new Error("Failed to logout",{cause:s})))},[o,a]),null}const P=g(function(){const o=x();return p.jsx(B,{...o})});export{P as default};
//# sourceMappingURL=pfguz7es3clq2ik4.js.map
